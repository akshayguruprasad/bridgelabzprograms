package com.statement.main;

import com.statement.entity.CheckListItem;
import com.statement.entity.Item;
import com.statement.service.CheckList;
import com.statement.service.Inventory;
import com.statement.serviceImpl.CheckListImpl;
import com.statement.serviceImpl.InventoryManage;
import com.statement.util.Utility;

public class MainClass {
	public static void main(String[] args) {

		Inventory inventorymanager = new InventoryManage();
		CheckList checkList = new CheckListImpl();
		while (true) {

			System.out.println("1.Enter Checklist");
			System.out.println("2.Enter item operation");

			int choice = Utility.getUserInt();
			switch (choice) {
			case 1:
				itemOperations(inventorymanager);

				break;
			case 2:
				checkListOperate(checkList);
				break;

			default:
				break;
			}

		}
	}

	private static void itemOperations(Inventory inventorymanager) {
		while (true) {

			System.out.println("1.add item");
			System.out.println("2.remove item");
			System.out.println("3.update item");
			System.out.println("4.display item");
			System.out.println("5.exit");
			int choice = Utility.getUserInt();

			switch (choice) {
			case 1:

				System.out.println("Enter the requirement details");
			Item item=Utility.getUserItem();
				inventorymanager.add(item);
				break;
			case 2:

				System.out.println("Enter the  item");
				item = inventorymanager.searchItem(Utility.getUserString());
				System.out.println();
				break;
			case 3:
				break;
			case 4:
				break;

			default:
				break;
			}

		}
	}

	private static void checkListOperate(CheckList inventorymanager) {

		while (true) {

			System.out.println("1.Add checklist entry");
			System.out.println("3.update checklist entry");
			System.out.println("2.delete checklist entry");
			System.out.println("4.search checklist entry");
			System.out.println("5.Exit");
			int choice = Utility.getUserInt();

			switch (choice) {
			case 1:
				addItem(inventorymanager);
				break;
			case 2:
				removeItem(inventorymanager);
				break;
			case 3:

				update(inventorymanager);

				break;
			case 4:

				display(inventorymanager);

				break;
			case 5:

			default:
				System.out.println("Exiting .....");
				return;

			}

		}
	}

	private static void display(CheckList inventorymanager) {

		System.out.println("Enter the name of the item to display in checklist");

		String name = Utility.getUserString();

		CheckListItem items = inventorymanager.searchItem(name);

		System.out.println(items);

	}

	private static void update(CheckList inventorymanager) {
		System.out.println("Enter the item id");
		int id = Utility.getUserInt();

		CheckListItem item = Utility.getUserCheckListItem();
		item.setId(id);
		if (inventorymanager.update(item)) {

			System.out.println("Item updated success");
			return;
		}

		System.out.println("Item failed to update");

	}

	private static void removeItem(CheckList inventorymanager) {
		System.out.println("Enter the id of item to remove");
		int id = Utility.getUserInt();

		boolean value = inventorymanager.remove(id);

		if (value) {
			System.out.println("Item removed success");
			return;

		}
		System.out.println("No item found");

	}

	private static void addItem(CheckList inventorymanager) {

		CheckListItem item = Utility.getUserCheckListItem();
		if (item == null) {
			return;
		}
		int id = inventorymanager.add(item);

		if (id < 1) {

			System.out.println("Item failed to  add....");
			return;
		}

		System.out.println("Item added success with id : " + id);

	}
}
