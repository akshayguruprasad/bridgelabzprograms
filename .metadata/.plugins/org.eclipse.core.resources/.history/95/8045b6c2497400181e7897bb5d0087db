package com.statement.util;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;

import com.statement.entity.Item;

public class Utility {
	private static final Scanner scanner = new Scanner(System.in);
	private static final SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");

	public static Connection getConnection() {
		Connection connection = null;

		try {
			Class.forName("com.mysql.jdbc.Driver");
			connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/bigbazar", "akshay", "password");

		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return connection;

	}

	public static String getUserString() {
		return scanner.nextLine();
	}

	public static int getUserInt() {

		int data = scanner.nextInt();

		scanner.nextLine();

		return data;

	}

	public static double getUserDouble() {

		double data = scanner.nextDouble();

		scanner.nextLine();

		return data;

	}

	public static Item getUserItem() {
		Item item = null;
		item = new Item();
		System.out.println("Enter the name of the item");

		String name = getUserString();
		item.setName(name);

		System.out.println("Enter the price of the item");

		double price = getUserDouble();
		System.out.println("Enter the exp date in dd/mm/yyyy");
		Date date = getUserDate();
		if (date == null) {
			return null;
		}
		item.setExpDate(date);

		item.setPrice(price);
		return item;

	}

	private static Date getUserDate() {

		String date = getUserString();
		try {
			return format.parse(date);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
	}

	public static Item getUpdateItem() {
		System.out.println("Enter which attribute u want to change");
		System.out.println("Name");
		System.out.println("Price");
		/* System.out.println("Exit"); */

		String field = null;
		field = getUserString();
		System.out.println("Enter the new  value for the " + field);
		String newValue = getUserString();
		Item item = new Item();

		switch (field.toLowerCase()) {
		case "name":

			item.setName(newValue);

			break;

		case "price":
			item.setPrice(Double.parseDouble(newValue));
			break;

		default:

			System.out.println("Invalid operation ");

			return null;

		}

		return item;

	}

}
